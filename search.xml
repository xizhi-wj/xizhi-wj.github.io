<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>浏览器环境和node环境的区别</title>
      <link href="/posts/bd1d8f32.html"/>
      <url>/posts/bd1d8f32.html</url>
      
        <content type="html"><![CDATA[<h3 id="区别一"><a href="#区别一" class="headerlink" title="区别一"></a>区别一</h3><blockquote><p>二者的方向不同，浏览器环境主要是用于客户端，node 环境主要是用于服务端(后端)</p></blockquote><h3 id="区别二"><a href="#区别二" class="headerlink" title="区别二"></a>区别二</h3><blockquote><p>浏览器环境不需要下载任何东西只需要一个 html 文件，node 环境需要下载 node.js,同时浏览器环境是直接在浏览器执行 js 代码，node 环境是在服务端执行 js 代码</p></blockquote><h3 id="区别三"><a href="#区别三" class="headerlink" title="区别三"></a>区别三</h3><blockquote><p>浏览器提供了一系列与浏览器交互的 API，如 DOM 操作，Ajax 请求、浏览器事件等，而 Node.js 环境提供了一系列与服务器端开发相关的 API，如文件系统操作、网络通信、模块管理等</p></blockquote><h3 id="区别四"><a href="#区别四" class="headerlink" title="区别四"></a>区别四</h3><blockquote><p>在模块系统方面，浏览器环境中通常使用 script 标签引入外部 JavaScript 文件。而在 Node.js 环境中，使用CommonJS 或 ES Modules（从 Node.js 13 版本开始支持）进行模块管理，可以使用 require 或 import 来引入其他模块</p></blockquote><h3 id="区别五"><a href="#区别五" class="headerlink" title="区别五"></a>区别五</h3><blockquote><p>全局对象不同：浏览器环境中，全局对象是 window，它提供了浏览器相关的功能和属性。而在 Node.js 环境中，全局对象是 global，它提供了与 Node.js 相关的功能和属性。</p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>node环境可以用来开发后端，就是如果当你需要一个后台用来处理前端请求，而又不会其他后端语言如java，python，这时候就可以使用node.js来写后端</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于three.js与浏览器环境实现粒子特效</title>
      <link href="/posts/e618e1da.html"/>
      <url>/posts/e618e1da.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>前阵子学习了 three.js,发现它是真的强大,可以实现各种各样的 3d 功能,然后自己试着做了一个基于 three.js 粒子系统的一个粒子特效</p></blockquote><hr><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><blockquote><p>创建粒子系统，里面包含了多个粒子，然后不断循环变更它Z轴的位置，这样所有的粒子的位置都会变更，这样看起来就像是我们的视角在穿越星空一样</p></blockquote><h3 id="创建一个-html-文件"><a href="#创建一个-html-文件" class="headerlink" title="创建一个 html 文件"></a>创建一个 html 文件</h3><blockquote><p>这里随便创建一个&lt;文件名&gt;.html文件就好了</p></blockquote><h3 id="在body标签中引入-three-js"><a href="#在body标签中引入-three-js" class="headerlink" title="在body标签中引入 three.js"></a>在body标签中引入 three.js</h3>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/three@latest/build/three.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="引入-gsap-这个动画库-方便写动画"><a href="#引入-gsap-这个动画库-方便写动画" class="headerlink" title="引入 gsap 这个动画库(方便写动画)"></a>引入 gsap 这个动画库(方便写动画)</h3>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/gsap.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="开工"><a href="#开工" class="headerlink" title="开工!"></a>开工!</h3><ul><li>创建场景<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br></pre></td></tr></table></figure></li><li>创建相机<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">10000</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li>创建渲染器<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br></pre></td></tr></table></figure></li><li>创建动画函数<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li>开始创建粒子<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> count = <span class="number">1000</span>; <span class="comment">//粒子的数量</span></span><br><span class="line"><span class="keyword">const</span> positions = <span class="keyword">new</span> <span class="title class_">Float32Array</span>((count * <span class="number">3</span>) / <span class="number">10</span>); <span class="comment">//粒子的位置属性</span></span><br><span class="line"><span class="keyword">const</span> colors = <span class="keyword">new</span> <span class="title class_">Float32Array</span>((count * <span class="number">3</span>) / <span class="number">10</span>); <span class="comment">//粒子的颜色属性</span></span><br><span class="line"><span class="keyword">const</span> particleGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>(); <span class="comment">//粒子的网格</span></span><br><span class="line"><span class="comment">//粒子的材质</span></span><br><span class="line"><span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">size</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span><br><span class="line">  <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">//设置顶点的颜色</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 初始化粒子的位置和颜色</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; (count / <span class="number">10</span>) * <span class="number">3</span>; j++) &#123;</span><br><span class="line">  positions[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span>;</span><br><span class="line">  positions[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span>;</span><br><span class="line">  positions[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1000</span> - <span class="number">500</span>;</span><br><span class="line">  colors[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">  colors[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">  colors[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置粒子的位置属性</span></span><br><span class="line">particleGeometry.<span class="title function_">setAttribute</span>(</span><br><span class="line">  <span class="string">&quot;position&quot;</span>,</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(positions, <span class="number">3</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">// 设置粒子的颜色属性</span></span><br><span class="line">particleGeometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;color&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>));</span><br><span class="line"><span class="comment">// 创建粒子</span></span><br><span class="line"><span class="keyword">const</span> points = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(particleGeometry, material);</span><br></pre></td></tr></table></figure></li><li>为粒子添加动画(使用 gsap)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">to</span>(points.<span class="property">position</span>, &#123;</span><br><span class="line">  <span class="attr">z</span>: -<span class="number">800</span>,</span><br><span class="line">  <span class="attr">duration</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span> + <span class="number">5</span>,</span><br><span class="line">  <span class="attr">repeat</span>: -<span class="number">1</span>,</span><br><span class="line">  <span class="attr">ease</span>: <span class="string">&quot;linear&quot;</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>将粒子添加到场景中<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scene.<span class="title function_">add</span>(points);</span><br></pre></td></tr></table></figure></li><li>效果预览(图片压缩了的，所以效果可能看起来不太好)<br><img src="/img/categories/前端/three/pre.gif"></li><li>这样我们的粒子特效就算完成了，但是聪明的你很快就能发现上面的粒子有点别扭，因为上面的代码是为整个粒子系统设置的动画，所以事实上我们看到的粒子移动是整个粒子系统在移动，当它完成了它的动画就会一瞬间回到原来的位置，然后就会有一点视觉上的突兀，那么如何解决这个问题呢？<h3 id="进一步改进"><a href="#进一步改进" class="headerlink" title="进一步改进"></a>进一步改进</h3></li><li>把所有的粒子分散到多个粒子系统<br>我们把所有粒子分成 10 个粒子系统，这样的话每个系统里面就包含了 100 和粒子，然后分别添加动画，并初始化不同的位置，这样的话就会大幅减少视觉上的突兀，话不多说，开始动手!<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> count = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">const</span> positions = <span class="keyword">new</span> <span class="title class_">Float32Array</span>((count * <span class="number">3</span>) / <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">const</span> colors = <span class="keyword">new</span> <span class="title class_">Float32Array</span>((count * <span class="number">3</span>) / <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">const</span> particleGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>();</span><br><span class="line">  <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">size</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span><br><span class="line">    <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">//设置顶点的颜色</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; (count / <span class="number">10</span>) * <span class="number">3</span>; j++) &#123;</span><br><span class="line">    positions[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span>;</span><br><span class="line">    positions[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span>;</span><br><span class="line">    positions[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1000</span> - <span class="number">500</span>;</span><br><span class="line">    colors[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">    colors[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">    colors[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  particleGeometry.<span class="title function_">setAttribute</span>(</span><br><span class="line">    <span class="string">&quot;position&quot;</span>,</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(positions, <span class="number">3</span>)</span><br><span class="line">  );</span><br><span class="line">  particleGeometry.<span class="title function_">setAttribute</span>(</span><br><span class="line">    <span class="string">&quot;color&quot;</span>,</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>)</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> points = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(particleGeometry, material);</span><br><span class="line">  scene.<span class="title function_">add</span>(points);</span><br><span class="line"></span><br><span class="line">  gsap.<span class="title function_">to</span>(points.<span class="property">position</span>, &#123;</span><br><span class="line">    <span class="attr">z</span>: -<span class="number">800</span>,</span><br><span class="line">    <span class="attr">duration</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span> + <span class="number">5</span>,</span><br><span class="line">    <span class="attr">repeat</span>: -<span class="number">1</span>,</span><br><span class="line">    <span class="attr">ease</span>: <span class="string">&quot;linear&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>效果预览(图片压缩了的，所以效果可能看起来不太好)<br><img src="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/%E5%89%8D%E7%AB%AF/particle%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88/preview.gif"><br>但是这样的话我们会发现每一个粒子都太单调了，虽然有颜色，但是都是正方形，那么如何设置成自己喜欢的粒子呢？</li><li>给粒子添加纹理<br>准备好你的纹理，其实就是一张图片，jpg，png 等格式都可以，可以直接去网上扒，也可以使用我的 <a href="/img/categories/前端/three/particle.png" download="particle.png" target="_blank">点击下载</a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> texture = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(<span class="string">&quot;./particle.png&quot;</span>);</span><br></pre></td></tr></table></figure>为粒子材质设置纹理<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">map</span>: texture, <span class="comment">//纹理</span></span><br><span class="line">  <span class="attr">alphaMap</span>: texture, <span class="comment">//透明纹理</span></span><br><span class="line">  <span class="attr">size</span>: <span class="number">5</span>, <span class="comment">//粒子大小</span></span><br><span class="line">  <span class="attr">depthWrite</span>: <span class="literal">false</span>, <span class="comment">//是否开启深度描写</span></span><br><span class="line">  <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>, <span class="comment">//混合模式</span></span><br><span class="line">  <span class="attr">transparent</span>: <span class="literal">false</span>, <span class="comment">//是否透明</span></span><br><span class="line">  <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">//设置顶点的颜色</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>效果预览(图片压缩了的，所以效果可能看起来不太好)<br><img src="/img/categories/前端/three/pre_final.gif"></li><li>完整代码<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    * &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">html</span>,<span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/three@latest/build/three.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/gsap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span></span><br><span class="line"><span class="language-javascript">      <span class="number">75</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="number">0.1</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="number">10000</span></span></span><br><span class="line"><span class="language-javascript">  )</span></span><br><span class="line"><span class="language-javascript">  camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>()</span></span><br><span class="line"><span class="language-javascript">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        renderer.<span class="title function_">render</span>(scene, camera)</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">requestAnimationFrame</span>(render)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">render</span>()</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//更新摄像头</span></span></span><br><span class="line"><span class="language-javascript">      camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//更新摄像机的投影矩阵</span></span></span><br><span class="line"><span class="language-javascript">      camera.<span class="title function_">updateProjectionMatrix</span>()</span></span><br><span class="line"><span class="language-javascript">      renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//设置渲染器的像素比</span></span></span><br><span class="line"><span class="language-javascript">      renderer.<span class="title function_">setPixelRatio</span>(<span class="variable language_">window</span>.<span class="property">devicePixelRatio</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> texture = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(<span class="string">&#x27;./particle.png&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> count = <span class="number">1000</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> positions = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(count * <span class="number">3</span> / <span class="number">10</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> colors = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(count * <span class="number">3</span> / <span class="number">10</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> particleGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">map</span>: texture,   <span class="comment">//纹理</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">alphaMap</span>: texture,  <span class="comment">//透明纹理</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">size</span>: <span class="number">10</span>,    <span class="comment">//粒子大小</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">depthWrite</span>: <span class="literal">false</span>,  <span class="comment">//是否开启深度描写</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,   <span class="comment">//混合模式</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">transparent</span>: <span class="literal">false</span>, <span class="comment">//是否透明</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">//设置顶点的颜色</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; count / <span class="number">10</span> * <span class="number">3</span>; j++) &#123;</span></span><br><span class="line"><span class="language-javascript">      positions[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span></span></span><br><span class="line"><span class="language-javascript">      positions[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span></span></span><br><span class="line"><span class="language-javascript">      positions[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1000</span> - <span class="number">500</span></span></span><br><span class="line"><span class="language-javascript">      colors[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>()</span></span><br><span class="line"><span class="language-javascript">      colors[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>()</span></span><br><span class="line"><span class="language-javascript">      colors[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>()</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    particleGeometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;position&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(positions, <span class="number">3</span>))</span></span><br><span class="line"><span class="language-javascript">    particleGeometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;color&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>))</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> points = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(particleGeometry, material)</span></span><br><span class="line"><span class="language-javascript">    scene.<span class="title function_">add</span>(points)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    gsap.<span class="title function_">to</span>(points.<span class="property">position</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">z</span>: -<span class="number">800</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">duration</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span> + <span class="number">3</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">repeat</span>: -<span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">ease</span>: <span class="string">&#x27;linear&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h3></li><li>弊端<blockquote><p> 我这里是使用了多个粒子系统来解决突兀问题，其实这种方式是不可取的，因为使用多个粒子系统会导致浏览器卡死，总之就是会消耗很多性能，如果想要解决突兀问题的话，可以考虑为每一个粒子添加单独的动画，而不是更改粒子系统的位置，每次当粒子到达目标位置的时候就马上回到原来到位置</p></blockquote></li><li>改进方向<blockquote><p>其实还有很多可以改进的地方，比如粒子的初始位置，还可以更加细化一些，还有就是可以设置粒子运动轨迹，让它不只是改变z轴的方向，让它的轨迹更加自由</p></blockquote></li><li>心声<blockquote><p> 感谢各位旅人阅读我的文章，如果有更加好的想法或者是遇到了问题欢迎与我交流</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> three.js </tag>
            
            <tag> javascript </tag>
            
            <tag> particleEffect </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于three.js实现VR看房效果</title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<h3 id="初始化一个-vue-项目-这里是基于-vue-环境来快速搭建"><a href="#初始化一个-vue-项目-这里是基于-vue-环境来快速搭建" class="headerlink" title="初始化一个 vue 项目(这里是基于 vue 环境来快速搭建)"></a>初始化一个 vue 项目(这里是基于 vue 环境来快速搭建)</h3><blockquote><p>关于环境说明：浏览器环境和 vue 环境都可以，只是用 vue 开发会更加便利，前提是得安装 node.js<br>打开终端，windows 用户 win + R 输入 cmd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init vue@latest</span><br></pre></td></tr></table></figure><p>然后会要你填项目的名字，输入完之后一路按回车就好，然后分别执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;你的项目&gt;</span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>之后 vue 会在你电脑上开启一个小型服务器，你可以直接在浏览器网址栏通过输入 localhost:5173 访问它，这样你的项目就初始化好了<br>然后按 ctrl + c 退出服务器<br>然后记得将你的 vue 项目再次初始化(就是把不需要的东西都删了)</p></blockquote><h3 id="下载-three-js"><a href="#下载-three-js" class="headerlink" title="下载 three.js"></a>下载 three.js</h3><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install three</span><br></pre></td></tr></table></figure></blockquote><h3 id="在-App-vue-文件里面初始化-three-js-的基本配置-这里采用-setup-响应式声明的方式"><a href="#在-App-vue-文件里面初始化-three-js-的基本配置-这里采用-setup-响应式声明的方式" class="headerlink" title="在 App.vue 文件里面初始化 three.js 的基本配置(这里采用 setup 响应式声明的方式)"></a>在 App.vue 文件里面初始化 three.js 的基本配置(这里采用 setup 响应式声明的方式)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="comment">//导入three</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span><br><span class="line"><span class="comment">//添加控制器</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/controls/OrbitControls&quot;</span>;</span><br><span class="line"><span class="comment">//引入挂载钩子函数</span></span><br><span class="line"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="comment">//场景的初始化</span></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"><span class="comment">//初始化相机</span></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//设置相机的位置</span></span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">0.1</span>;</span><br><span class="line"><span class="comment">//初始化渲染器</span></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="comment">//初始化控制器</span></span><br><span class="line"><span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, <span class="variable language_">document</span>.<span class="property">body</span>);</span><br><span class="line">orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">//渲染函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line">  <span class="title function_">render</span>();</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="开始加载场景-准备好一张hdr全景图或者是-6-张全方位图-可以网上扒，没有的话可以使用我的-点击下载全景图"><a href="#开始加载场景-准备好一张hdr全景图或者是-6-张全方位图-可以网上扒，没有的话可以使用我的-点击下载全景图" class="headerlink" title="开始加载场景(准备好一张hdr全景图或者是 6 张全方位图)可以网上扒，没有的话可以使用我的 点击下载全景图"></a>开始加载场景(准备好一张hdr全景图或者是 6 张全方位图)可以网上扒，没有的话可以使用我的 <a href="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/%E5%89%8D%E7%AB%AF/vr%E7%9C%8B%E6%88%BF/BrightMichiganFunRoom.hdr" download="BrightMichiganFunRoom.hdr" target="_blank">点击下载全景图</a></h3><p>在上面的代码的基础上添加下面的代码(import导入代码放在头部)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入加载器，用来加载图片</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RGBELoader</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/loaders/RGBELoader&quot;</span>;</span><br><span class="line"><span class="comment">//添加球  HDR全景展示</span></span><br><span class="line"><span class="comment">// 5代表半径，32代表顶点数量</span></span><br><span class="line"><span class="keyword">const</span> sphereGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">SphereGeometry</span>(<span class="number">5</span>, <span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"><span class="comment">// 初始化加载器</span></span><br><span class="line"><span class="keyword">const</span> loader = <span class="keyword">new</span> <span class="title class_">RGBELoader</span>();</span><br><span class="line"><span class="comment">// 加载全景图</span></span><br><span class="line">loader.<span class="title function_">load</span>(<span class="string">&quot;./imgs/BrightMichiganFunRoom.hdr&quot;</span>, <span class="function">(<span class="params">texture</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 创建球的材质并设置纹理</span></span><br><span class="line">  <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">map</span>: texture,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">// 创建球</span></span><br><span class="line">  <span class="keyword">const</span> sphere = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(sphereGeometry, material);</span><br><span class="line">  <span class="comment">// 设置z轴方向缩放为-1是为了让全景图展示在球的内部，不然的话全景图就会展示在球的表面</span></span><br><span class="line">  sphere.<span class="property">geometry</span>.<span class="title function_">scale</span>(<span class="number">1</span>, <span class="number">1</span>, -<span class="number">1</span>);</span><br><span class="line">  <span class="comment">// 添加球</span></span><br><span class="line">  scene.<span class="title function_">add</span>(sphere);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="进入终端，输入下面命令查看效果"><a href="#进入终端，输入下面命令查看效果" class="headerlink" title="进入终端，输入下面命令查看效果"></a>进入终端，输入下面命令查看效果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h3 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h3><p><img src="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/vrkanfang.gif"></p><h3 id="全局代码"><a href="#全局代码" class="headerlink" title="全局代码"></a>全局代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  <span class="comment">//导入three</span></span><br><span class="line">  <span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">import</span> &#123; <span class="title class_">RGBELoader</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/loaders/RGBELoader&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//添加控制器</span></span><br><span class="line">  <span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/controls/OrbitControls&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//场景的初始化</span></span><br><span class="line">  <span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line">  <span class="comment">//初始化相机</span></span><br><span class="line">  <span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(<span class="number">75</span>, <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>, <span class="number">0.1</span>, <span class="number">1000</span>);</span><br><span class="line">  <span class="comment">//设置相机的位置</span></span><br><span class="line">  camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">0.1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//初始化渲染器</span></span><br><span class="line">  <span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, <span class="variable language_">document</span>.<span class="property">body</span>);</span><br><span class="line">  orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;;</span><br><span class="line">  <span class="comment">//渲染函数</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//渲染器渲染</span></span><br><span class="line">    renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">    <span class="comment">//控制器更新</span></span><br><span class="line">    orbitControls.<span class="title function_">update</span>();</span><br><span class="line">    <span class="comment">//浏览器渲染函数</span></span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//挂载完毕后调用</span></span><br><span class="line">  <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line">    <span class="comment">//执行渲染函数</span></span><br><span class="line">    <span class="title function_">render</span>();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//这里是使用6张全方位图的方式</span></span><br><span class="line">  <span class="comment">//添加立方体  VR看房</span></span><br><span class="line">  <span class="comment">// const boxGeometry = new THREE.BoxGeometry(10, 10, 10);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// let arr = [&#x27;l&#x27;, &#x27;r&#x27;, &#x27;u&#x27;, &#x27;d&#x27;, &#x27;b&#x27;, &#x27;f&#x27;];</span></span><br><span class="line">  <span class="comment">// let boxMaterials = [];</span></span><br><span class="line">  <span class="comment">// arr.forEach((item) =&gt; &#123;</span></span><br><span class="line">  <span class="comment">//   //纹理加载</span></span><br><span class="line">  <span class="comment">//   let texture = new THREE.TextureLoader().load(`./imgs/$&#123;item&#125;.jpg`);</span></span><br><span class="line">    </span><br><span class="line">  <span class="comment">//   if(item === &#x27;u&#x27; || item === &#x27;d&#x27;) &#123;</span></span><br><span class="line">  <span class="comment">//     texture.rotation = Math.PI;</span></span><br><span class="line">  <span class="comment">//     texture.center.set(0.5, 0.5);</span></span><br><span class="line">  <span class="comment">//     boxMaterials.push(new THREE.MeshBasicMaterial(&#123;</span></span><br><span class="line">  <span class="comment">//       map: texture</span></span><br><span class="line">  <span class="comment">//     &#125;));</span></span><br><span class="line">  <span class="comment">//   &#125; else &#123;</span></span><br><span class="line">  <span class="comment">//     boxMaterials.push(new THREE.MeshBasicMaterial(&#123;</span></span><br><span class="line">  <span class="comment">//       map: texture</span></span><br><span class="line">  <span class="comment">//     &#125;));</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">// &#125;);</span></span><br><span class="line">  <span class="comment">// const cube = new THREE.Mesh(boxGeometry, boxMaterials);</span></span><br><span class="line">  <span class="comment">// cube.geometry.scale(1, 1, -1);</span></span><br><span class="line">  <span class="comment">// scene.add(cube);</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//添加球  HDR全景展示</span></span><br><span class="line">  <span class="keyword">const</span> sphereGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">SphereGeometry</span>(<span class="number">5</span>, <span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line">  <span class="keyword">const</span> loader = <span class="keyword">new</span> <span class="title class_">RGBELoader</span>();</span><br><span class="line">  loader.<span class="title function_">load</span>(<span class="string">&#x27;./imgs/BrightMichiganFunRoom.hdr&#x27;</span>, <span class="function">(<span class="params">texture</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;</span><br><span class="line">      <span class="attr">map</span>: texture</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">const</span> sphere = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(sphereGeometry, material);</span><br><span class="line">    sphere.<span class="property">geometry</span>.<span class="title function_">scale</span>(<span class="number">1</span>, <span class="number">1</span>, -<span class="number">1</span>);</span><br><span class="line">    scene.<span class="title function_">add</span>(sphere);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  * &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">margin</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> three.js </tag>
            
            <tag> VR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用canvas来实现一个简单的鼠标特效</title>
      <link href="/posts/759a7587.html"/>
      <url>/posts/759a7587.html</url>
      
        <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><blockquote><p>每次点击屏幕的时候，就使用 canvas 画布画一些小星星，然后在每一帧的时候清除 canvas 画布的内容，同时更新这些星星的位置、速度、半径，当这些星星的位置超过屏幕范围或者半径为 0 的时候，再删除他们</p></blockquote><h2 id="新建一个-html-文件"><a href="#新建一个-html-文件" class="headerlink" title="新建一个 html 文件"></a>新建一个 html 文件</h2><h2 id="创建初始化变量"><a href="#创建初始化变量" class="headerlink" title="创建初始化变量"></a>创建初始化变量</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> stars = []; <span class="comment">//存放星星的数组</span></span><br><span class="line"><span class="keyword">let</span> ctx; <span class="comment">//画布的上下文</span></span><br><span class="line"><span class="keyword">let</span> width, height; <span class="comment">//屏幕的宽高</span></span><br><span class="line"><span class="keyword">let</span> origin; <span class="comment">//默认的生成星星的位置</span></span><br><span class="line"><span class="keyword">let</span> colors = [<span class="string">&quot;#F73859&quot;</span>, <span class="string">&quot;#14FFEC&quot;</span>, <span class="string">&quot;#00E0FF&quot;</span>, <span class="string">&quot;#FF99FE&quot;</span>, <span class="string">&quot;#FAF15D&quot;</span>]; <span class="comment">//星星的颜色</span></span><br><span class="line"><span class="keyword">const</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>); <span class="comment">//创建画布</span></span><br><span class="line">ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line"><span class="comment">//设置画布的样式</span></span><br><span class="line">canvas.<span class="title function_">setAttribute</span>(</span><br><span class="line">  <span class="string">&quot;style&quot;</span>,</span><br><span class="line">  <span class="string">&quot;width: 100%; height: 100%; position: fixed; top: 0; left: 0; z-index: 9999; pointer-events: none;&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(canvas); <span class="comment">//将画布元素添加到dom中</span></span><br></pre></td></tr></table></figure><h2 id="定义工具函数-生成一个区间之内的数"><a href="#定义工具函数-生成一个区间之内的数" class="headerlink" title="定义工具函数(生成一个区间之内的数)"></a>定义工具函数(生成一个区间之内的数)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">randBetween</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * max) + min;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义一个-Star-类"><a href="#定义一个-Star-类" class="headerlink" title="定义一个 Star 类"></a>定义一个 Star 类</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Star</span> &#123;</span><br><span class="line">  <span class="comment">//x，y为星星位置</span></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">x = origin.x, y = origin.y</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">x</span> = x;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">y</span> = y;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">angle</span> = <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">radius</span> = <span class="title function_">randBetween</span>(<span class="number">5</span>, <span class="number">10</span>) + <span class="number">3</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>(); <span class="comment">//星星的半径</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">color</span> = colors[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * colors.<span class="property">length</span>)]; <span class="comment">//星星的颜色</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="number">5</span> * <span class="title class_">Math</span>.<span class="title function_">cos</span>(<span class="variable language_">this</span>.<span class="property">angle</span>); <span class="comment">//星星的x方向速度</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">vy</span> = <span class="number">5</span> * <span class="title class_">Math</span>.<span class="title function_">sin</span>(<span class="variable language_">this</span>.<span class="property">angle</span>); <span class="comment">//星星的y方向速度</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//更新星星的速度、位置、半径</span></span><br><span class="line">  <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">vx</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">vy</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">radius</span> -= <span class="number">0.3</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">vy</span> *= <span class="number">0.9</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">vx</span> *= <span class="number">0.9</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义存放星星和移除星星的方法"><a href="#定义存放星星和移除星星的方法" class="headerlink" title="定义存放星星和移除星星的方法"></a>定义存放星星和移除星星的方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//存放星星</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">pushStar</span>(<span class="params">count = <span class="number">1</span>, x = origin.x, y = origin.y</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">    stars.<span class="title function_">push</span>(<span class="keyword">new</span> <span class="title class_">Star</span>(x, y));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//移除星星</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">removeStar</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; stars.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> star = stars[i];</span><br><span class="line">    <span class="comment">//判断是否符合删除条件</span></span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      star.<span class="property">radius</span> &lt;= <span class="number">0</span> ||</span><br><span class="line">      star.<span class="property">x</span> - star.<span class="property">radius</span> &gt; width ||</span><br><span class="line">      star.<span class="property">y</span> + star.<span class="property">radius</span> &lt; <span class="number">0</span> ||</span><br><span class="line">      star.<span class="property">x</span> + star.<span class="property">radius</span> &lt; <span class="number">0</span> ||</span><br><span class="line">      star.<span class="property">y</span> - star.<span class="property">radius</span> &gt; height</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="comment">//删除不符合条件的星星，从索引i开始删除一个元素</span></span><br><span class="line">      stars.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建更新画布和初始位置函数"><a href="#创建更新画布和初始位置函数" class="headerlink" title="创建更新画布和初始位置函数"></a>创建更新画布和初始位置函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">updateSize</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//更新画布的大小</span></span><br><span class="line">  canvas.<span class="property">width</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">  canvas.<span class="property">height</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  width = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">  height = <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  <span class="comment">//更新默认位置</span></span><br><span class="line">  origin = &#123;</span><br><span class="line">    <span class="attr">x</span>: width / <span class="number">2</span>,</span><br><span class="line">    <span class="attr">y</span>: height / <span class="number">2</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建渲染函数"><a href="#创建渲染函数" class="headerlink" title="创建渲染函数"></a>创建渲染函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">  ctx.<span class="property">fillStyle</span> = <span class="string">&quot;rgba(255, 255, 255, 0)&quot;</span>;</span><br><span class="line">  <span class="comment">//清除画布的内容</span></span><br><span class="line">  ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvas.<span class="property">width</span>, canvas.<span class="property">height</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; stars.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> star = stars[i];</span><br><span class="line">    <span class="keyword">if</span> (star.<span class="property">radius</span> &lt;= <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="comment">//开始绘制</span></span><br><span class="line">    ctx.<span class="title function_">beginPath</span>();</span><br><span class="line">    <span class="comment">//设置绘制的样式</span></span><br><span class="line">    ctx.<span class="property">fillStyle</span> = star.<span class="property">color</span>;</span><br><span class="line">    <span class="comment">//画五角星</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> angle = ((i * <span class="number">4</span> + <span class="number">2</span>) * <span class="title class_">Math</span>.<span class="property">PI</span>) / <span class="number">5</span> - <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">const</span> x = star.<span class="property">x</span> + <span class="title class_">Math</span>.<span class="title function_">cos</span>(angle) * star.<span class="property">radius</span>;</span><br><span class="line">      <span class="keyword">const</span> y = star.<span class="property">y</span> + <span class="title class_">Math</span>.<span class="title function_">sin</span>(angle) * star.<span class="property">radius</span>;</span><br><span class="line"></span><br><span class="line">      ctx.<span class="title function_">lineTo</span>(x, y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//填充</span></span><br><span class="line">    ctx.<span class="title function_">fill</span>();</span><br><span class="line">    <span class="comment">//调用五角星的动画函数，更新五角星的信息</span></span><br><span class="line">    star.<span class="title function_">update</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//调用移除函数，移除不符合条件的五角星</span></span><br><span class="line">  <span class="title function_">removeStar</span>();</span><br><span class="line">  <span class="comment">//浏览器渲染函数</span></span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最后一步，绑定点击事件并调用渲染函数"><a href="#最后一步，绑定点击事件并调用渲染函数" class="headerlink" title="最后一步，绑定点击事件并调用渲染函数"></a>最后一步，绑定点击事件并调用渲染函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//鼠标按下之后创建15个星星，并设置初始位置为鼠标的位置</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;mousedown&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">pushStar</span>(<span class="number">15</span>, e.<span class="property">clientX</span>, e.<span class="property">clientY</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//调用渲染函数</span></span><br><span class="line"><span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><h2 id="打开浏览器预览效果"><a href="#打开浏览器预览效果" class="headerlink" title="打开浏览器预览效果"></a>打开浏览器预览效果</h2><p><img src="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/%E5%89%8D%E7%AB%AF/%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88/preview.gif"></p><h2 id="最终代码-我个人写的"><a href="#最终代码-我个人写的" class="headerlink" title="最终代码(我个人写的)"></a>最终代码(我个人写的)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">clickEffect</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> stars = []</span><br><span class="line">    <span class="keyword">let</span> ctx</span><br><span class="line">        <span class="keyword">let</span> width, height</span><br><span class="line">    <span class="keyword">let</span> origin</span><br><span class="line">        <span class="keyword">let</span> colors = [<span class="string">&quot;#12aae8&quot;</span>, <span class="string">&quot;#14FFEC&quot;</span>, <span class="string">&quot;#00E0FF&quot;</span>, <span class="string">&quot;#08eeb8&quot;</span>, <span class="string">&quot;#FAF15D&quot;</span>]</span><br><span class="line">        <span class="keyword">const</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>)</span><br><span class="line">        canvas.<span class="title function_">setAttribute</span>(<span class="string">&quot;style&quot;</span>, <span class="string">&quot;width: 100%; height: 100%; position: fixed; top: 0; left: 0; z-index: 9999; pointer-events: none;&quot;</span>)</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(canvas)</span><br><span class="line">    <span class="title function_">updateSize</span>()</span><br><span class="line"><span class="keyword">if</span> (canvas.<span class="property">getContext</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">addEventListener</span>) &#123;</span><br><span class="line">ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>)</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;mousedown&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">pushStar</span>(<span class="number">15</span>, e.<span class="property">clientX</span>, e.<span class="property">clientY</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="title function_">render</span>()</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">Star</span> &#123;</span><br><span class="line"><span class="title function_">constructor</span>(<span class="params">x = origin.x, y = origin.y</span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">x</span> = x</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">y</span> = y</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">angle</span> = <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">radius</span> = <span class="title function_">randBetween</span>(<span class="number">5</span>, <span class="number">10</span>) + <span class="number">3</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">color</span> = colors[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * colors.<span class="property">length</span>)]</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">vx</span> = <span class="number">5</span> * <span class="title class_">Math</span>.<span class="title function_">cos</span>(<span class="variable language_">this</span>.<span class="property">angle</span>)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">vy</span> = <span class="number">5</span> * <span class="title class_">Math</span>.<span class="title function_">sin</span>(<span class="variable language_">this</span>.<span class="property">angle</span>)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">vx</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">vy</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">radius</span> -= <span class="number">0.3</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">vy</span> *= <span class="number">0.9</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">vx</span> *= <span class="number">0.9</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">updateSize</span>(<span class="params"></span>) &#123;</span><br><span class="line">            canvas.<span class="property">width</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span></span><br><span class="line">        canvas.<span class="property">height</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span></span><br><span class="line">        width = <span class="variable language_">window</span>.<span class="property">innerWidth</span></span><br><span class="line">        height = <span class="variable language_">window</span>.<span class="property">innerHeight</span></span><br><span class="line">        origin = &#123;</span><br><span class="line">                <span class="attr">x</span>: width / <span class="number">2</span>,</span><br><span class="line">        <span class="attr">y</span>: height / <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">            ctx.<span class="property">fillStyle</span> = <span class="string">&quot;rgba(255, 255, 255, 0)&quot;</span></span><br><span class="line">            ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvas.<span class="property">width</span>, canvas.<span class="property">height</span>)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; stars.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> star = stars[i]</span><br><span class="line">        <span class="keyword">if</span> (star.<span class="property">radius</span> &lt;= <span class="number">0</span>) <span class="keyword">continue</span></span><br><span class="line">        ctx.<span class="title function_">beginPath</span>()</span><br><span class="line">                ctx.<span class="property">fillStyle</span> = star.<span class="property">color</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">const</span> angle = ((i * <span class="number">4</span> + <span class="number">2</span>) * <span class="title class_">Math</span>.<span class="property">PI</span>) / <span class="number">5</span> - <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">const</span> x = star.<span class="property">x</span> + <span class="title class_">Math</span>.<span class="title function_">cos</span>(angle) * star.<span class="property">radius</span>;</span><br><span class="line">                    <span class="keyword">const</span> y = star.<span class="property">y</span> + <span class="title class_">Math</span>.<span class="title function_">sin</span>(angle) * star.<span class="property">radius</span>;</span><br><span class="line"></span><br><span class="line">                    ctx.<span class="title function_">lineTo</span>(x, y);</span><br><span class="line">                &#125;</span><br><span class="line">                ctx.<span class="title function_">fill</span>()</span><br><span class="line">        star.<span class="title function_">update</span>()</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="title function_">removeStar</span>()</span><br><span class="line">            <span class="title function_">requestAnimationFrame</span>(render)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">randBetween</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * max) + min;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">pushStar</span>(<span class="params">count = <span class="number">1</span>, x = origin.x, y = origin.y</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">                stars.<span class="title function_">push</span>(<span class="keyword">new</span> <span class="title class_">Star</span>(x, y))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">removeStar</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; stars.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> star = stars[i]</span><br><span class="line">            <span class="keyword">if</span> (</span><br><span class="line">                    star.<span class="property">radius</span> &lt;= <span class="number">0</span> ||</span><br><span class="line">            star.<span class="property">x</span> - star.<span class="property">radius</span> &gt; width ||</span><br><span class="line">            star.<span class="property">y</span> + star.<span class="property">radius</span> &lt; <span class="number">0</span> ||</span><br><span class="line">            star.<span class="property">x</span> + star.<span class="property">radius</span> &lt; <span class="number">0</span> ||</span><br><span class="line">            star.<span class="property">y</span> - star.<span class="property">radius</span> &gt; height</span><br><span class="line">            ) &#123;</span><br><span class="line">stars.<span class="title function_">splice</span>(i, <span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="title function_">clickEffect</span>()</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 鼠标特效 </tag>
            
            <tag> canvas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在java后端解决跨域问题</title>
      <link href="/posts/85c1fe2e.html"/>
      <url>/posts/85c1fe2e.html</url>
      
        <content type="html"><![CDATA[<h3 id="第一种方式使用-CrossOrigin-注解"><a href="#第一种方式使用-CrossOrigin-注解" class="headerlink" title="第一种方式使用@CrossOrigin 注解"></a>第一种方式使用@CrossOrigin 注解</h3><blockquote><p>在你的 controller 类中处理请求的方法前加上@CrossOrigin 这个注解或者直接在 controller 类上加上这个注解，例如</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R&lt;Manager&gt; <span class="title function_">login</span><span class="params">(<span class="meta">@RequestBody</span> Map&lt;String, String&gt; map, HttpSession httpSession)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> map.get(<span class="string">&quot;username&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> map.get(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">    LambdaQueryWrapper&lt;Manager&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    queryWrapper.eq(Manager::getManagerName, username);</span><br><span class="line"></span><br><span class="line">    <span class="type">Manager</span> <span class="variable">manager</span> <span class="operator">=</span> managerService.getOne(queryWrapper);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (manager == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!manager.getPassword().equals(password)) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    BaseContext.setCurrentId((<span class="type">long</span>) manager.getId());</span><br><span class="line"></span><br><span class="line">    manager.setToken(JwtUtil.getToken(map));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.success(manager, <span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这样在处理前端请求的时候就不会发生跨域问题了</p></blockquote><h4 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h4><blockquote><p>使用一个注解就可以解决，非常方便</p></blockquote><h4 id="弊端"><a href="#弊端" class="headerlink" title="弊端"></a>弊端</h4><blockquote><p>每一个方法前都需要加上一个注解，很麻烦</p></blockquote><h3 id="第二种方式，使用配置类-WebMvcConfigurationSupport"><a href="#第二种方式，使用配置类-WebMvcConfigurationSupport" class="headerlink" title="第二种方式，使用配置类 WebMvcConfigurationSupport"></a>第二种方式，使用配置类 WebMvcConfigurationSupport</h3><h4 id="在你的项目中创建一个配置类并继承-WebMvcConfigurationSupport"><a href="#在你的项目中创建一个配置类并继承-WebMvcConfigurationSupport" class="headerlink" title="在你的项目中创建一个配置类并继承 WebMvcConfigurationSupport"></a>在你的项目中创建一个配置类并继承 WebMvcConfigurationSupport</h4><h4 id="重写父类的-addCorsMappings-方法"><a href="#重写父类的-addCorsMappings-方法" class="headerlink" title="重写父类的 addCorsMappings 方法"></a>重写父类的 addCorsMappings 方法</h4><blockquote><p>方法说明<br>addMapping：配置允许跨域请求的路径。<br>allowedOrigins：配置允许访问的源（域名）列表。<br>allowedMethods：配置允许的请求方法列表。<br>allowedHeaders：配置允许的请求头列表。<br>exposedHeaders：配置允许前端访问的响应头列表。<br>allowCredentials：配置是否允许发送 Cookie 等凭证信息。<br>maxAge：配置预检请求（OPTIONS 请求）的最大缓存时间。</p></blockquote><hr><blockquote><p>例如我这里</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span>  <span class="title class_">WebMvcConfig</span> <span class="keyword">extends</span> <span class="title class_">WebMvcConfigurationSupport</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;GET&quot;</span>, <span class="string">&quot;DELETE&quot;</span>, <span class="string">&quot;PUT&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>在 java 只可以使用两种方式解决跨域问题，一种是使用@CrossOrigin 注解，一种是使用 WebMvcConfigurationSupport 配置类<br>另外需要注意的是，解决跨域问题还有很多方式，这里只阐述使用 java 该如何解决，如果在前端解决的话，需要使用 JSONP，JSONP 是一种在跨域请求中获取数据的方法。它通过在页面中动态创建 script 标签，将请求数据作为回调函数的参数返回，从而绕过浏览器的同源策略限制。JSONP 只支持 GET 请求，且需要服务器端配合返回合适的响应。——不推荐使用<br>还可以使用代理服务器(比如 nginx)进行解决，前端应用发送请求到代理服务器，然后由代理服务器转发请求到目标服务器，并将响应返回给前端应用。因为代理服务器与目标服务器位于同一域下，所以不存在跨域问题。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 后端 </tag>
            
            <tag> 跨域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>祝我19岁生日快乐！</title>
      <link href="/posts/8ff97ce2.html"/>
      <url>/posts/8ff97ce2.html</url>
      
        <content type="html"><![CDATA[<h2 id="回顾-18-岁"><a href="#回顾-18-岁" class="headerlink" title="回顾 18 岁"></a>回顾 18 岁</h2><h3 id="高考"><a href="#高考" class="headerlink" title="高考"></a>高考</h3><blockquote><p>现在回想起高考仿佛在昨日，不知不觉已经快是一个大二的学生了，高考也不能说没有考好吧，毕竟我实力也就那样，虽然最后冲刺冲了上去，但是基础还是不稳固，遗憾确实会有一点，不过后来逐渐释然了，我觉得一切都有它的意义，即使考的不好也有它的意义，分数不能决定一切，我一直都是这么相信的。<br>高考让我学会了挺多的</p><blockquote><p>有些人在高考之后可能就再也见不到了，同学都去了不同的城市，去追随他们的梦想，毕业后又会去往不同的城市工作<br>有时候就是这么一张纸，能决定你的初始层次<br>只有在关键时刻赢的人才是最终赢家</p></blockquote></blockquote><h3 id="开始接触编程"><a href="#开始接触编程" class="headerlink" title="开始接触编程"></a>开始接触编程</h3><blockquote><p>考完后一身轻松，放下了所有的包袱，终于可以好好做自己喜欢的事了，刚好家里买了一台台式电脑，于是开始编程之旅了，一开始是打算学习 java 的，但是因为 java 的初学难度高，把我劝退了，岂可修！！！然后我就阴差阳错开始学习了前端，前端学习还是比较有趣轻松的，因为你所做的东西立马可以在浏览器中见到，而且前端无拘无束，你想写什么都可以，你可以在浏览器中把你脑海里经常幻想出来的画面展示出来，那时候真的很快乐，我能一天从早上起床一直到休息前都在电脑前学习前端(现在想想我那时候是不是超级厉害)然后经过我的努力学习，很快就学习完了前端三剑客 html、css、javascript<br>之后在我师傅的带领下开始学习java，有了前端的基础学习java也轻松了许多，最起码不是啥都不懂了，学起来还是蛮快的，然后一个月学完了javaee<br>之后发现了尚硅谷和黑马程序员这几个平台，学习了web开发、前后端结合、微信小程序等等<br>然后对Unity游戏开发有了兴趣，寒假学习了一个月，哈哈，现在能做出点极其简单的小游戏<br>再之后就是根据自己的兴趣在进行学习了，学习更多的框架，更多插件，不断拓展</p></blockquote><h2 id="新的征程"><a href="#新的征程" class="headerlink" title="新的征程"></a>新的征程</h2><h3 id="开启我的-19-岁！"><a href="#开启我的-19-岁！" class="headerlink" title="开启我的 19 岁！"></a>开启我的 19 岁！</h3><blockquote><p>现在想想学习了那么久了，该做出点成效了，所以接下来打算运用自己的知识，做出点能丰富我19岁的成绩<br>18岁的我固然很精彩，但是往后的我也不会输于18岁的我的！如果生命中某件事让你开心，那你就尽管去做，加油吧！我自己！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生日 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的个人博客！</title>
      <link href="/posts/9520.html"/>
      <url>/posts/9520.html</url>
      
        <content type="html"><![CDATA[<h1 id="从-hexo-框架开始"><a href="#从-hexo-框架开始" class="headerlink" title="从 hexo 框架开始"></a>从 hexo 框架开始</h1><blockquote><p>曾经一直想着拥有自己的博客，现在终于实现了，一开始是想着学了 vue 和 springboot 两个框架后，自己搭建一个博客，但是写着写着发现效率好低，做着很多重复性工作(才不是我的代码封装性不好)，总之就是想写好的话需要很久的时间，因为样式、脚本、字体等等都要自己弄，终究是以失败告终，后来问 chat 才发现原来有现成的博客框架 hexo，当知道这点的时候可开心了，马上就去了解这个框架，这个框架用起来倒是不难，大部分博客该有的功能都帮我实现了，但是我要的是一个个性化的博客，我想要随意的改变我博客的每一个地方，然后发现 hexo 有很多的主题，于是…</p></blockquote><hr><h1 id="主题选择之旅"><a href="#主题选择之旅" class="headerlink" title="主题选择之旅"></a>主题选择之旅</h1><blockquote><p>于是又开启主题学习之旅，但是主题的选择又成为了一个难题，于是我上网看了大部分人所使用的主题，有一个 Aurora 主题我挺喜欢的，一个极光主题，很有科技感和未来感，不过看起来太花哨了，色彩很重，我想要我的博客色彩淡一些，于是选择了 butterfly 主题，这个主题网上有教程，所以学习起来不是很难，我很快就配置好了这个主题，但是新的问题又来了…</p></blockquote><h1 id="开始魔改"><a href="#开始魔改" class="headerlink" title="开始魔改"></a>开始魔改</h1><blockquote><p>虽然是使用了一个主题，但是这个主题毕竟还是别人的，总有地方是自己还想要进一步改造的，所以需要对主题进行魔改，这个 b 站上有教程，一开始是跟着安知鱼这个博主进行修改的，整个过程还是比较简单轻松的，很快就改造的有模有样了，但是终究是跟着别人改的，还不会自己改，所以我又开始研究如何自己魔改，然后研究了一下主题的源代码，发现…</p></blockquote><h1 id="自己魔改"><a href="#自己魔改" class="headerlink" title="自己魔改"></a>自己魔改</h1><blockquote><p>我发现原来魔改好简单，一开始看到.pug 和.styl 文件我还以为是我不熟悉的语言写的文件，然后仔细一看.pug 文件不就是简单版的 html 文件吗，.styl 文件就是简单版的 css 文件，岂可修！！！搞得我还以为我要学习新的语言，除了语法有点区别外其他基本一样，所以我很快就上手了自己魔改。其实魔改挺有意思的，我现在有点乐在其中了哈哈</p></blockquote><h1 id="学习收获"><a href="#学习收获" class="headerlink" title="学习收获"></a>学习收获</h1><blockquote><p>这次博客搭建学到了挺多的东西，比如我只知道 css 可以定义变量，却不知道具体该怎么使用，现在对变量声明和使用都熟悉了，然后就是学习到了很多新的插件和新的思维方式与概念，还认识到了很多优秀的博主，了解到了更多工具网站，比如制作徽标，icon 等等</p></blockquote><h1 id="心声"><a href="#心声" class="headerlink" title="心声"></a>心声</h1><blockquote><p>这个博客承载着我的热爱与热情，这个博客会见证我的成长，我也会见证这个博客的成长，另外我搭建这个博客的原因有很多，一是自己真的想要一个博客用来分享自己的学习成果，自己的生活，记录自己的成长轨迹，二是想结交更多朋友，想认识更多来自互联网的旅人，与我一起交流，不仅仅是编程，还有生活琐事，三是想在这互联网上搭建一个栖息的地方，供互联网中的旅人休息，同时也是想在互联网中留下自己的足迹，四是我生日快到了哈哈，我想为 19 岁的我送上一份最棒的生日礼物，18 岁的我实现了高中的梦想——成为一名程序员！我那时候的高中生活是很无趣的，每天就是写作业，考试，吃饭睡觉，每天重复着无趣的活动，直到遇到了编程，我的世界变得有趣起来，所以开始下定决心要成为一名程序员！高考结束后我立马就开始投入了编程的学习，那真是一段非常充实的时光，我的世界也变得丰富多彩起来！到现在接触编程已经快一年了，能自己写出不错的东西了，但是我的征程还才开始，后面还有很长一段征程要走，所以我希望 19 岁的我能保持我 18 岁的热情，让心永远向阳、不忘初心、不停留在过往、以风为方向勇往直前！保持那个斗志昂扬不认输的我！有梦埋在心底，为实现至死不渝！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"xizhi`Blog","short_name":"xizhi","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/sw.js"/>
      <url>/sw.js</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于我</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/countup.js"/>
      <url>/js/countup.js</url>
      
        <content type="html"><![CDATA[var CountUp = function (target, startVal, endVal, decimals, duration, options) {  var self = this;  self.version = function () {    return "1.9.2";  };  self.options = {    useEasing: true,    useGrouping: true,    separator: ",",    decimal: ".",    easingFn: easeOutExpo,    formattingFn: formatNumber,    prefix: "",    suffix: "",    numerals: [],  };  if (options && typeof options === "object") {    for (var key in self.options) {      if (options.hasOwnProperty(key) && options[key] !== null) {        self.options[key] = options[key];      }    }  }  if (self.options.separator === "") {    self.options.useGrouping = false;  } else {    self.options.separator = "" + self.options.separator;  }  var lastTime = 0;  var vendors = ["webkit", "moz", "ms", "o"];  for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {    window.requestAnimationFrame = window[vendors[x] + "RequestAnimationFrame"];    window.cancelAnimationFrame =      window[vendors[x] + "CancelAnimationFrame"] ||      window[vendors[x] + "CancelRequestAnimationFrame"];  }  if (!window.requestAnimationFrame) {    window.requestAnimationFrame = function (callback, element) {      var currTime = new Date().getTime();      var timeToCall = Math.max(0, 16 - (currTime - lastTime));      var id = window.setTimeout(function () {        callback(currTime + timeToCall);      }, timeToCall);      lastTime = currTime + timeToCall;      return id;    };  }  if (!window.cancelAnimationFrame) {    window.cancelAnimationFrame = function (id) {      clearTimeout(id);    };  }  function formatNumber(num) {    num = num.toFixed(self.decimals);    num += "";    var x, x1, x2, x3, i, l;    x = num.split(".");    x1 = x[0];    x2 = x.length > 1 ? self.options.decimal + x[1] : "";    if (self.options.useGrouping) {      x3 = "";      for (i = 0, l = x1.length; i < l; ++i) {        if (i !== 0 && i % 3 === 0) {          x3 = self.options.separator + x3;        }        x3 = x1[l - i - 1] + x3;      }      x1 = x3;    }    if (self.options.numerals.length) {      x1 = x1.replace(/[0-9]/g, function (w) {        return self.options.numerals[+w];      });      x2 = x2.replace(/[0-9]/g, function (w) {        return self.options.numerals[+w];      });    }    return self.options.prefix + x1 + x2 + self.options.suffix;  }  function easeOutExpo(t, b, c, d) {    return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;  }  function ensureNumber(n) {    return typeof n === "number" && !isNaN(n);  }  self.initialize = function () {    if (self.initialized) {      return true;    }    self.error = "";    self.d =      typeof target === "string" ? document.getElementById(target) : target;    if (!self.d) {      self.error = "[CountUp] target is null or undefined";      return false;    }    self.startVal = Number(startVal);    self.endVal = Number(endVal);    if (ensureNumber(self.startVal) && ensureNumber(self.endVal)) {      self.decimals = Math.max(0, decimals || 0);      self.dec = Math.pow(10, self.decimals);      self.duration = Number(duration) * 1000 || 2000;      self.countDown = self.startVal > self.endVal;      self.frameVal = self.startVal;      self.initialized = true;      return true;    } else {      self.error =        "[CountUp] startVal (" +        startVal +        ") or endVal (" +        endVal +        ") is not a number";      return false;    }  };  self.printValue = function (value) {    var result = self.options.formattingFn(value);    if (self.d.tagName === "INPUT") {      this.d.value = result;    } else {      if (self.d.tagName === "text" || self.d.tagName === "tspan") {        this.d.textContent = result;      } else {        this.d.innerHTML = result;      }    }  };  self.count = function (timestamp) {    if (!self.startTime) {      self.startTime = timestamp;    }    self.timestamp = timestamp;    var progress = timestamp - self.startTime;    self.remaining = self.duration - progress;    if (self.options.useEasing) {      if (self.countDown) {        self.frameVal =          self.startVal -          self.options.easingFn(            progress,            0,            self.startVal - self.endVal,            self.duration          );      } else {        self.frameVal = self.options.easingFn(          progress,          self.startVal,          self.endVal - self.startVal,          self.duration        );      }    } else {      if (self.countDown) {        self.frameVal =          self.startVal -          (self.startVal - self.endVal) * (progress / self.duration);      } else {        self.frameVal =          self.startVal +          (self.endVal - self.startVal) * (progress / self.duration);      }    }    if (self.countDown) {      self.frameVal = self.frameVal < self.endVal ? self.endVal : self.frameVal;    } else {      self.frameVal = self.frameVal > self.endVal ? self.endVal : self.frameVal;    }    self.frameVal = Math.round(self.frameVal * self.dec) / self.dec;    self.printValue(self.frameVal);    if (progress < self.duration) {      self.rAF = requestAnimationFrame(self.count);    } else {      if (self.callback) {        self.callback();      }    }  };  self.start = function (callback) {    if (!self.initialize()) {      return;    }    self.callback = callback;    self.rAF = requestAnimationFrame(self.count);  };  self.pauseResume = function () {    if (!self.paused) {      self.paused = true;      cancelAnimationFrame(self.rAF);    } else {      self.paused = false;      delete self.startTime;      self.duration = self.remaining;      self.startVal = self.frameVal;      requestAnimationFrame(self.count);    }  };  self.reset = function () {    self.paused = false;    delete self.startTime;    self.initialized = false;    if (self.initialize()) {      cancelAnimationFrame(self.rAF);      self.printValue(self.startVal);    }  };  self.update = function (newEndVal) {    if (!self.initialize()) {      return;    }    newEndVal = Number(newEndVal);    if (!ensureNumber(newEndVal)) {      self.error =        "[CountUp] update() - new endVal is not a number: " + newEndVal;      return;    }    self.error = "";    if (newEndVal === self.frameVal) {      return;    }    cancelAnimationFrame(self.rAF);    self.paused = false;    delete self.startTime;    self.startVal = self.frameVal;    self.endVal = newEndVal;    self.countDown = self.startVal > self.endVal;    self.rAF = requestAnimationFrame(self.count);  };  if (self.initialize()) {    self.printValue(self.startVal);  }};]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/ali_font.js"/>
      <url>/js/ali_font.js</url>
      
        <content type="html"><![CDATA[(window._iconfont_svg_string_4066425 =  '<svg><symbol id="icon-bilibili" viewBox="0 0 1024 1024"><path d="M977.2 208.2c33.4 36.2 48.8 79.4 46.6 131.4v404.8c-0.8 52.8-18.4 96.2-53 130.2-34.4 34-78.2 51.8-131 53.4H184.04c-52.9-1.6-96.42-19.6-130.56-54.4C19.364 838.8 1.534 793 0 736.4V339.6c1.534-52 19.364-95.2 53.48-131.4C87.62 175.5 131.14 157.54 184.04 156h58.76L192.1 104.38c-11.5-11.46-17.26-26-17.26-43.58 0-17.6 5.76-32.12 17.26-43.594C203.6 5.736 218.2 0 235.8 0s32.2 5.736 43.8 17.206L426.2 156h176l149-138.794C763.4 5.736 778.4 0 796 0c17.6 0 32.2 5.736 43.8 17.206 11.4 11.474 17.2 25.994 17.2 43.594 0 17.58-5.8 32.12-17.2 43.58L789.2 156h58.6c52.8 1.54 96 19.5 129.4 52.2z m-77.6 139.4c-0.8-19.2-7.4-34.8-21.4-47-10.4-12.2-28-18.8-45.4-19.6H192.1c-19.18 0.8-34.9 7.4-47.16 19.6-12.28 12.2-18.8 27.8-19.56 47v388.8c0 18.4 6.52 34 19.56 47s28.76 19.6 47.16 19.6H832.8c18.4 0 34-6.6 46.6-19.6 12.6-13 19.4-28.6 20.2-47V347.6z m-528.6 85.4c12.6 12.6 19.4 28.2 20.2 46.4V546c-0.8 18.4-7.4 33.8-19.6 46.4-12.4 12.6-28 19-47.2 19-19.2 0-35-6.4-47.2-19-12.2-12.6-18.8-28-19.6-46.4v-66.6c0.8-18.2 7.6-33.8 20.2-46.4 12.6-12.6 26.4-19.2 46.6-20 18.4 0.8 34 7.4 46.6 20z m383 0c12.6 12.6 19.4 28.2 20.2 46.4V546c-0.8 18.4-7.4 33.8-19.6 46.4-12.2 12.6-28 19-47.2 19-19.2 0-34.8-6.4-47.2-19-14-12.6-18.8-28-19.4-46.4v-66.6c0.6-18.2 7.4-33.8 20-46.4 12.6-12.6 28.2-19.2 46.6-20 18.4 0.8 34 7.4 46.6 20z"  ></path></symbol></svg>'),  (function (n) {    var t = (t = document.getElementsByTagName("script"))[t.length - 1],      e = t.getAttribute("data-injectcss"),      t = t.getAttribute("data-disable-injectsvg");    if (!t) {      var i,        c,        o,        d,        s,        a = function (t, e) {          e.parentNode.insertBefore(t, e);        };      if (e && !n.__iconfont__svg__cssinject__) {        n.__iconfont__svg__cssinject__ = !0;        try {          document.write(            "<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>"          );        } catch (t) {          console && console.log(t);        }      }      (i = function () {        var t,          e = document.createElement("div");        (e.innerHTML = n._iconfont_svg_string_4066425),          (e = e.getElementsByTagName("svg")[0]) &&            (e.setAttribute("aria-hidden", "true"),            (e.style.position = "absolute"),            (e.style.width = 0),            (e.style.height = 0),            (e.style.overflow = "hidden"),            (e = e),            (t = document.body).firstChild              ? a(e, t.firstChild)              : t.appendChild(e));      }),        document.addEventListener          ? ~["complete", "loaded", "interactive"].indexOf(document.readyState)            ? setTimeout(i, 0)            : ((c = function () {                document.removeEventListener("DOMContentLoaded", c, !1), i();              }),              document.addEventListener("DOMContentLoaded", c, !1))          : document.attachEvent &&            ((o = i),            (d = n.document),            (s = !1),            r(),            (d.onreadystatechange = function () {              "complete" == d.readyState &&                ((d.onreadystatechange = null), l());            }));    }    function l() {      s || ((s = !0), o());    }    function r() {      try {        d.documentElement.doScroll("left");      } catch (t) {        return void setTimeout(r, 50);      }      l();    }  })(window);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>todolist</title>
      <link href="/todolist/index.html"/>
      <url>/todolist/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/coin/coin.js"/>
      <url>/js/coin/coin.js</url>
      
        <content type="html"><![CDATA[var tipButtons = document.querySelectorAll('.tip-button')function coinAudio() {  var coinAudio = document.getElementById("coinAudio");  if (coinAudio) {    coinAudio.play();//有音频时播放  }}// Loop through all buttons (allows for multiple buttons on page)tipButtons.forEach((button) => {  var coin = button.querySelector('.coin')  // The larger the number, the slower the animation  coin.maxMoveLoopCount = 90  button.addEventListener('click', () => {    if (/Android|webOS|BlackBerry/i.test(navigator.userAgent)) return true; //媒体选择    if (button.clicked) return    button.classList.add('clicked')    // Wait to start flipping th coin because of the button tilt animation    setTimeout(() => {      // Randomize the flipping speeds just for fun      coin.sideRotationCount = Math.floor(Math.random() * 5) * 90      coin.maxFlipAngle = (Math.floor(Math.random() * 4) + 3) * Math.PI      button.clicked = true      flipCoin()      coinAudio()    }, 50)  })  var flipCoin = () => {    coin.moveLoopCount = 0    flipCoinLoop()  }  var resetCoin = () => {    coin.style.setProperty('--coin-x-multiplier', 0)    coin.style.setProperty('--coin-scale-multiplier', 0)    coin.style.setProperty('--coin-rotation-multiplier', 0)    coin.style.setProperty('--shine-opacity-multiplier', 0.4)    coin.style.setProperty('--shine-bg-multiplier', '50%')    coin.style.setProperty('opacity', 1)    // Delay to give the reset animation some time before you can click again    setTimeout(() => {      button.clicked = false    }, 300)  }  var flipCoinLoop = () => {    coin.moveLoopCount++    var percentageCompleted = coin.moveLoopCount / coin.maxMoveLoopCount    coin.angle = -coin.maxFlipAngle * Math.pow((percentageCompleted - 1), 2) + coin.maxFlipAngle    // Calculate the scale and position of the coin moving through the air    coin.style.setProperty('--coin-y-multiplier', -11 * Math.pow(percentageCompleted * 2 - 1, 4) + 11)    coin.style.setProperty('--coin-x-multiplier', percentageCompleted)    coin.style.setProperty('--coin-scale-multiplier', percentageCompleted * 0.6)    coin.style.setProperty('--coin-rotation-multiplier', percentageCompleted * coin.sideRotationCount)    // Calculate the scale and position values for the different coin faces    // The math uses sin/cos wave functions to similate the circular motion of 3D spin    coin.style.setProperty('--front-scale-multiplier', Math.max(Math.cos(coin.angle), 0))    coin.style.setProperty('--front-y-multiplier', Math.sin(coin.angle))    coin.style.setProperty('--middle-scale-multiplier', Math.abs(Math.cos(coin.angle), 0))    coin.style.setProperty('--middle-y-multiplier', Math.cos((coin.angle + Math.PI / 2) % Math.PI))    coin.style.setProperty('--back-scale-multiplier', Math.max(Math.cos(coin.angle - Math.PI), 0))    coin.style.setProperty('--back-y-multiplier', Math.sin(coin.angle - Math.PI))    coin.style.setProperty('--shine-opacity-multiplier', 4 * Math.sin((coin.angle + Math.PI / 2) % Math.PI) - 3.2)    coin.style.setProperty('--shine-bg-multiplier', -40 * (Math.cos((coin.angle + Math.PI / 2) % Math.PI) - 0.5) + '%')    // Repeat animation loop    if (coin.moveLoopCount < coin.maxMoveLoopCount) {      if (coin.moveLoopCount === coin.maxMoveLoopCount - 6) button.classList.add('shrink-landing')      window.requestAnimationFrame(flipCoinLoop)    } else {      button.classList.add('coin-landed')      coin.style.setProperty('opacity', 0)      setTimeout(() => {        button.classList.remove('clicked', 'shrink-landing', 'coin-landed')        setTimeout(() => {          resetCoin()        }, 300)      }, 1500)    }  }})]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/footer/runtime.js"/>
      <url>/js/footer/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date();function createtime() {  var t = new Date("05/22/2023 00:00:00");  now.setTime(now.getTime() + 250);  var e = (now - t) / 1e3 / 60 / 60 / 24,    a = Math.floor(e),    n = (now - t) / 1e3 / 60 / 60 - 24 * a,    r = Math.floor(n);  1 == String(r).length && (r = "0" + r);  var s = (now - t) / 1e3 / 60 - 1440 * a - 60 * r,    i = Math.floor(s);  1 == String(i).length && (i = "0" + i);  var o = (now - t) / 1e3 - 86400 * a - 3600 * r - 60 * i,    l = Math.round(o);  1 == String(l).length && (l = "0" + l);  let g = "";  (g =    r < 18 && r >= 9      ? `<img class='boardsign' src='https://img.shields.io/badge/曦凪-学习中-blue?style=social&logo=affinity' title='距离月入25k也就还差一个大佬带我~'><span class='textTip'> <br> 本站居然运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`      : `<img class='boardsign' src='https://img.shields.io/badge/曦凪-摆烂中-blue?style=social&logo=affinity' title='下班了就该开开心心的玩耍，嘿嘿~'><span class='textTip'> <br> 本站居然运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`),    document.getElementById("workboard") &&      (document.getElementById("workboard").innerHTML = g);}setInterval(() => {  createtime();}, 250);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/random/random.js"/>
      <url>/js/random/random.js</url>
      
        <content type="html"><![CDATA[hexo.extend.generator.register('random', function (locals) {    const config = hexo.config.random || {}    const posts = []    for (const post of locals.posts.data) {        if (post.random !== false) posts.push(post.path)    }    return {        path: config.path || 'bywind/random.js',        data: `var posts=${JSON.stringify(posts)};function toRandomPost(){pjax.loadUrl('/'+posts[Math.floor(Math.random() * posts.length)]);};`    }})]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/title/title.js"/>
      <url>/js/title/title.js</url>
      
        <content type="html"><![CDATA[//动态标题var OriginTitile = document.title;var titleTime;document.addEventListener("visibilitychange", function () {  if (document.hidden) {    //离开当前页面时标签显示内容    document.title = "w(ﾟДﾟ)w 不要走！再看看嘛！";    clearTimeout(titleTime);  } else {    //返回当前页面时标签显示内容    document.title = "♪(^∇^*)欢迎肥来！" + OriginTitile;    //两秒后变回正常标题    titleTime = setTimeout(function () {      document.title = OriginTitile;    }, 2000);  }});]]></content>
      
    </entry>
    
    
  
</search>
